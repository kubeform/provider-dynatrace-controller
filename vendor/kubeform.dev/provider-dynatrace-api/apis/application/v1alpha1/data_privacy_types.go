/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DataPrivacy struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DataPrivacySpec   `json:"spec,omitempty"`
	Status            DataPrivacyStatus `json:"status,omitempty"`
}

type DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule struct {
	// The selector for the element or the attribute to be masked.
	//
	// Specify a CSS expression for an element or a [regular expression](https://dt-url.net/k9e0iaq) for an attribute
	Selector *string `json:"selector" tf:"selector"`
	// The type of the masking rule
	Type *string `json:"type" tf:"type"`
	// Interactions with the element are (`true`) or are not (`false) masked
	// +optional
	UserInteractionHidden *bool `json:"userInteractionHidden,omitempty" tf:"user_interaction_hidden"`
}

type DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsPlaybackRules struct {
	// The masking rule defining how data is hidden
	// +kubebuilder:validation:MinItems=1
	Rule []DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule `json:"rule" tf:"rule"`
}

type DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsPlayback struct {
	// The type of the masking:
	//
	// * `MASK_ALL`: Mask all texts, user input, and images.
	// * `MASK_USER_INPUT`: Mask all data that is provided through user input
	// * `ALLOW_LIST`: Only elements, specified in **maskingRules** are shown, everything else is masked.
	// * `BLOCK_LIST`: Elements, specified in **maskingRules** are masked, everything else is shown
	Preset *string `json:"preset" tf:"preset"`
	// A list of masking rules
	// +optional
	Rules *DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsPlaybackRules `json:"rules,omitempty" tf:"rules"`
}

type DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule struct {
	// The selector for the element or the attribute to be masked.
	//
	// Specify a CSS expression for an element or a [regular expression](https://dt-url.net/k9e0iaq) for an attribute
	Selector *string `json:"selector" tf:"selector"`
	// The type of the masking rule
	Type *string `json:"type" tf:"type"`
	// Interactions with the element are (`true`) or are not (`false) masked
	// +optional
	UserInteractionHidden *bool `json:"userInteractionHidden,omitempty" tf:"user_interaction_hidden"`
}

type DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsRecordingRules struct {
	// The masking rule defining how data is hidden
	// +kubebuilder:validation:MinItems=1
	Rule []DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule `json:"rule" tf:"rule"`
}

type DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsRecording struct {
	// The type of the masking:
	//
	// * `MASK_ALL`: Mask all texts, user input, and images.
	// * `MASK_USER_INPUT`: Mask all data that is provided through user input
	// * `ALLOW_LIST`: Only elements, specified in **maskingRules** are shown, everything else is masked.
	// * `BLOCK_LIST`: Elements, specified in **maskingRules** are masked, everything else is shown
	Preset *string `json:"preset" tf:"preset"`
	// A list of masking rules
	// +optional
	Rules *DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsRecordingRules `json:"rules,omitempty" tf:"rules"`
}

type DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettings struct {
	// Configuration of the Session Replay masking during Playback
	Playback *DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsPlayback `json:"playback" tf:"playback"`
	// Configuration of the Session Replay masking during Recording
	Recording *DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettingsRecording `json:"recording" tf:"recording"`
}

type DataPrivacySpecSessionReplayDataPrivacy struct {
	// Content masking settings for Session Replay.
	//
	// For more details, see [Configure Session Replay](https://dt-url.net/0m03slq) in Dynatrace Documentation
	ContentMaskingSettings *DataPrivacySpecSessionReplayDataPrivacyContentMaskingSettings `json:"contentMaskingSettings" tf:"content_masking_settings"`
	// If `true`, session recording is disabled until JavaScriptAPI `dtrum.enableSessionReplay()` is called
	// +optional
	OptIn *bool `json:"optIn,omitempty" tf:"opt_in"`
	// A list of URLs to be excluded from recording
	// +optional
	// +kubebuilder:validation:MinItems=1
	UrlExclusionRules []string `json:"urlExclusionRules,omitempty" tf:"url_exclusion_rules"`
}

type DataPrivacySpec struct {
	State *DataPrivacySpecResource `json:"state,omitempty" tf:"-"`

	Resource DataPrivacySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type DataPrivacySpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
	// +optional
	DataCaptureOptIn *bool `json:"dataCaptureOptIn,omitempty" tf:"data_capture_opt_in"`
	// How to handle the "Do Not Track" header:
	//
	// * `IGNORE_DO_NOT_TRACK`: ignore the header and capture the data.
	// * `CAPTURE_ANONYMIZED`: capture the data but do not tie it to the user.
	// * `DO_NOT_CAPTURE`: respect the header and do not capture.
	DoNotTrackBehaviour *string `json:"doNotTrackBehaviour" tf:"do_not_track_behaviour"`
	// Set to `true` to set persistent cookie in order to recognize returning devices
	// +optional
	PersistentCookieForUserTracking *bool `json:"persistentCookieForUserTracking,omitempty" tf:"persistent_cookie_for_user_tracking"`
	// Data privacy settings for Session Replay
	SessionReplayDataPrivacy *DataPrivacySpecSessionReplayDataPrivacy `json:"sessionReplayDataPrivacy" tf:"session_replay_data_privacy"`
	// Dynatrace entity ID of the web application
	WebApplicationID *string `json:"webApplicationID" tf:"web_application_id"`
}

type DataPrivacyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DataPrivacyList is a list of DataPrivacys
type DataPrivacyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DataPrivacy CRD objects
	Items []DataPrivacy `json:"items,omitempty"`
}
