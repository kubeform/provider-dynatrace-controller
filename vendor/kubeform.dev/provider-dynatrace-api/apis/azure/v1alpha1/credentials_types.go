/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Credentials struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CredentialsSpec   `json:"spec,omitempty"`
	Status            CredentialsStatus `json:"status,omitempty"`
}

type CredentialsSpecMonitorOnlyTagPairs struct {
	// The name of the tag.
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// Any attributes that aren't yet supported by this provider
	// +optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns"`
	// The value of the tag.   If set to `null`, then resources with any value of the tag are monitored.
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type CredentialsSpecSupportingServicesMonitoredMetrics struct {
	// a list of metric's dimensions names
	// +optional
	Dimensions []string `json:"dimensions,omitempty" tf:"dimensions"`
	// the name of the metric of the supporting service
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// Any attributes that aren't yet supported by this provider
	// +optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns"`
}

type CredentialsSpecSupportingServices struct {
	// A list of Azure tags to be monitored.  You can specify up to 10 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`
	// +optional
	MonitoredMetrics []CredentialsSpecSupportingServicesMonitoredMetrics `json:"monitoredMetrics,omitempty" tf:"monitored_metrics"`
	// The name of the supporting service.
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// Any attributes that aren't yet supported by this provider
	// +optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns"`
}

type CredentialsSpec struct {
	State *CredentialsSpecResource `json:"state,omitempty" tf:"-"`

	Resource CredentialsSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type CredentialsSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected
	Active *bool `json:"active" tf:"active"`
	// The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique
	// +optional
	AppID *string `json:"appID,omitempty" tf:"app_id"`
	// The automatic capture of Azure tags is on (`true`) or off (`false`)
	// +optional
	AutoTagging *bool `json:"autoTagging,omitempty" tf:"auto_tagging"`
	// The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique
	// +optional
	DirectoryID *string `json:"directoryID,omitempty" tf:"directory_id"`
	//  The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`.   Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.
	// +optional
	Key *string `json:"key,omitempty" tf:"key"`
	// The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed
	// +optional
	Label *string `json:"label,omitempty" tf:"label"`
	// A list of Azure tags to be monitored.  You can specify up to 10 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`
	// +optional
	// +kubebuilder:validation:MaxItems=10
	MonitorOnlyTagPairs []CredentialsSpecMonitorOnlyTagPairs `json:"monitorOnlyTagPairs,omitempty" tf:"monitor_only_tag_pairs"`
	// Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).
	MonitorOnlyTaggedEntities *bool `json:"monitorOnlyTaggedEntities" tf:"monitor_only_tagged_entities"`
	// A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.
	// +optional
	SupportingServices []CredentialsSpecSupportingServices `json:"supportingServices,omitempty" tf:"supporting_services"`
	// Any attributes that aren't yet supported by this provider
	// +optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns"`
}

type CredentialsStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CredentialsList is a list of Credentialss
type CredentialsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Credentials CRD objects
	Items []Credentials `json:"items,omitempty"`
}
